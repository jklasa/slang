%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
file_extensions:
  - sl
scope: source.sl

variables:
  keyword: \b(?:nop|cmp|cpy|typ|prv|def|new|prt|spr|ret|psh|mod|pop|run|get|all|del|die|err|rea|jmp|jeq|jne|jgt|jge|jlt|jle|jer|jnr|add|sub|mul|div|inc|dec|bor|and|xor|inv|shl|shr|usr)\b

  char_escape: \\x\h{2}|\\u\h{4}|\\U\h{8}|\\[0-7]{3}|\\.

  ident: \b([A-Za-z0-9]|\_|\-)+\b
  global: \b[A-Z]([A-Za-z0-9]|\_|\-)+\b
  local: \b[a-z]([A-Za-z0-9]|\_|\-)+\b

contexts:
  main:
    - include: match-structures
    - include: match-comments
    - include: match-keywords
    - include: match-identifiers
    - include: match-operators
    - include: match-strings

  match-structures:
    - match: '(def) ({{ident}})'
      captures:
        1: keyword.control.flow.sl
        2: entity.name.function.sl

  match-comments:
    - match: (;)
      scope: punctuation.definition.comment.sl
      push:
        - meta_scope: comment.line.sl
        - match: $\n?
          pop: true

  match-keywords:
    - match: \b{{keyword}}\b
      scope: keyword.control.flow.sl
    - match: '<<<'
      scope: keyword.control.flow.sl
    - match: '<<\/'
      scope: keyword.control.flow.sl

  match-identifiers:
    - include: match-predeclared-constants
    - include: match-labels
    - include: match-literals
    - include: match-variables

  match-operators:
    - match: \b\+\b
      scope: keyword.operator.sl
    - match: \b\-\b
      scope: keyword.operator.sl
    - match: \*
      scope: keyword.operator.sl
    - match: \&
      scope: keyword.operator.sl

  match-strings:
    - match: '"'
      scope: punctuation.definition.string.begin.go
      push:
        - meta_scope: string.quoted.double.go
        - match: '"'
          scope: punctuation.definition.string.end.go
          pop: true
        - include: match-template-string
        - match: '{{char_escape}}'
          scope: constant.character.escape.go
        - match: (\%s|\%v)
          scope: constant.character.escape.go

  match-predeclared-constants:
    - match: \b(?:true|false|nil)\b
      scope: constant.language.sl

  match-variables:
    - match: '{{global}}'
      scope: support.function.sl
    - match: '{{local}}'
      scope: variable.other.sl

  match-labels:
    - match: ^\#{{ident}}[:]?
      scope: string.regexp.sl
    - match: \#{{ident}}[:]?$
      scope: string.regexp.sl
    - match: \#{{ident}}[:]?
      scope: invalid.illegal.sl
    - match: '\>{{ident}}'
      scope: variable.other.sl

  match-literals:
    - match: '[+-]?\d*(\.)\d+'
      scope: constant.numeric.float.sl
      captures:
        2: punctuation.separator.decimal.sl
    - match: '[+-]?\d+'
      scope: constant.numeric.integer.decimal.sl